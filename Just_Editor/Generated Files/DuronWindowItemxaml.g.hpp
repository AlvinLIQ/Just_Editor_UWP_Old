//------------------------------------------------------------------------------
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//------------------------------------------------------------------------------
#include "pch.h"

#pragma warning(push)
#pragma warning(disable: 4100) // unreferenced formal parameter

#if defined _DEBUG && !defined DISABLE_XAML_GENERATED_BINDING_DEBUG_OUTPUT
extern "C" __declspec(dllimport) int __stdcall IsDebuggerPresent();
#endif

#include "DuronWindowItemxaml.xaml.h"

void ::Just_Editor::DuronWindowItemxaml::InitializeComponent()
{
    if (_contentLoaded)
    {
        return;
    }
    _contentLoaded = true;
    ::Windows::Foundation::Uri^ resourceLocator = ref new ::Windows::Foundation::Uri(L"ms-appx:///DuronWindowItemxaml.xaml");
    ::Windows::UI::Xaml::Application::LoadComponent(this, resourceLocator, ::Windows::UI::Xaml::Controls::Primitives::ComponentResourceLocation::Application);
}


/// <summary>
/// Auto generated class for compiled bindings.
/// </summary>
class Just_Editor::DuronWindowItemxaml::DuronWindowItemxaml_obj1_Bindings 
    : public ::XamlBindingInfo::ReferenceTypeXamlBindings<::Just_Editor::DuronWindowItemxaml, ::XamlBindingInfo::XamlBindingTrackingBase>
    , public ::XamlBindingInfo::IXamlBindingTracking
{
public:
    DuronWindowItemxaml_obj1_Bindings()
    {
        InitializeTracking(this);
    }

private:
    ~DuronWindowItemxaml_obj1_Bindings()
    {
        ReleaseAllListeners();
    }

public:

    void Connect(int __connectionId, ::Platform::Object^ __target)
    {
        switch(__connectionId)
        {
            case 2: // DuronWindowItemxaml.xaml line 12
                this->obj2 = safe_cast<::Windows::UI::Xaml::Controls::Grid^>(__target);
                break;
            case 3: // DuronWindowItemxaml.xaml line 14
                this->obj3 = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
                break;
        }
    }

private:
    // Fields for each control that has bindings.
    ::Windows::UI::Xaml::Controls::Grid^ obj2;
    ::Windows::UI::Xaml::Controls::TextBlock^ obj3;
    
    // Fields for binding tracking.
    ::Platform::WeakReference cacheDPC_Background;
    __int64 tokenDPC_Background = 0;

    // Update methods for each path node used in binding steps.
    void Update_(::Just_Editor::DuronWindowItemxaml^ obj, int phase)
    {
        this->_bindingsTracking->UpdateDependencyPropertyChangedListener(obj, ::Just_Editor::DuronWindowItemxaml::BackgroundProperty, this->cacheDPC_Background, &this->tokenDPC_Background);
        if (obj != nullptr)
        {
            if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
            {
                this->Update_Background(obj->Background, phase);
                this->Update_FileName(obj->FileName, phase);
            }
        }
    }
    void Update_Background(::Windows::UI::Xaml::Media::Brush^ obj, int phase)
    {
        if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
        {
            // DuronWindowItemxaml.xaml line 12
            Set_Windows_UI_Xaml_Controls_Panel_Background(this->obj2, obj, nullptr);
        }
    }
    void Update_FileName(::Platform::String^ obj, int phase)
    {
        if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
        {
            // DuronWindowItemxaml.xaml line 14
            Set_Windows_UI_Xaml_Controls_TextBlock_Text(this->obj3, obj, nullptr);
        }
    }

    virtual void ReleaseAllListeners() override
    {
        this->_bindingsTracking->UpdateDependencyPropertyChangedListener(nullptr, ::Just_Editor::DuronWindowItemxaml::BackgroundProperty, this->cacheDPC_Background, &this->tokenDPC_Background);
    }

    virtual void PropertyChanged(Platform::Object^ sender, ::Windows::UI::Xaml::Data::PropertyChangedEventArgs^ e) override
    {
    }

    void CollectionChanged(::Platform::Object^ sender, ::Windows::UI::Xaml::Interop::NotifyCollectionChangedEventArgs^ e)
    {
    }

    void VectorChanged(::Platform::Object^ sender, ::Windows::Foundation::Collections::IVectorChangedEventArgs^ e)
    {
    }

    void MapChanged(::Platform::Object^ sender, ::Windows::Foundation::Collections::IMapChangedEventArgs<::Platform::String^>^ e)
    {
    }

    void DependencyPropertyChanged(::Windows::UI::Xaml::DependencyObject^ sender, ::Windows::UI::Xaml::DependencyProperty^ prop)
    {
        if (sender != nullptr)
        {
            if (sender->Equals(this->cacheDPC_Background.Resolve<::Windows::UI::Xaml::DependencyObject>()) && ::Just_Editor::DuronWindowItemxaml::BackgroundProperty->Equals(prop))
            {
                ::Just_Editor::DuronWindowItemxaml^ obj = safe_cast<::Just_Editor::DuronWindowItemxaml^>(sender);
                if (obj != nullptr)
                {
                    this->Update_Background(obj->Background, DATA_CHANGED);
                }
            }
        }
    }
    static void Set_Windows_UI_Xaml_Controls_Panel_Background(::Windows::UI::Xaml::Controls::Panel^ obj, ::Windows::UI::Xaml::Media::Brush^ value, ::Platform::String^ targetNullValue)
    {
        if (value == nullptr && targetNullValue != nullptr)
        {
            value = (::Windows::UI::Xaml::Media::Brush^) ::Windows::UI::Xaml::Markup::XamlBindingHelper::ConvertValue(::Windows::UI::Xaml::Media::Brush::typeid, targetNullValue);
        }
        obj->Background = value;
    }
    static void Set_Windows_UI_Xaml_Controls_TextBlock_Text(::Windows::UI::Xaml::Controls::TextBlock^ obj, ::Platform::String^ value, ::Platform::String^ targetNullValue)
    {
        if (value == nullptr && targetNullValue != nullptr)
        {
            value = targetNullValue;
        }
        obj->Text = value;
    }
};

void ::Just_Editor::DuronWindowItemxaml::Connect(int __connectionId, ::Platform::Object^ __target)
{
    switch (__connectionId)
    {
    case 2:
        {
            this->MainGrid = safe_cast<::Windows::UI::Xaml::Controls::Grid^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::Grid^>(this->MainGrid))->PointerEntered += ref new ::Windows::UI::Xaml::Input::PointerEventHandler(this, (void (::Just_Editor::DuronWindowItemxaml::*)
                (::Platform::Object^, ::Windows::UI::Xaml::Input::PointerRoutedEventArgs^))&DuronWindowItemxaml::MainGrid_PointerEntered);
            (safe_cast<::Windows::UI::Xaml::Controls::Grid^>(this->MainGrid))->PointerCaptureLost += ref new ::Windows::UI::Xaml::Input::PointerEventHandler(this, (void (::Just_Editor::DuronWindowItemxaml::*)
                (::Platform::Object^, ::Windows::UI::Xaml::Input::PointerRoutedEventArgs^))&DuronWindowItemxaml::MainGrid_PointerCaptureLost);
            (safe_cast<::Windows::UI::Xaml::Controls::Grid^>(this->MainGrid))->PointerExited += ref new ::Windows::UI::Xaml::Input::PointerEventHandler(this, (void (::Just_Editor::DuronWindowItemxaml::*)
                (::Platform::Object^, ::Windows::UI::Xaml::Input::PointerRoutedEventArgs^))&DuronWindowItemxaml::MainGrid_PointerCaptureLost);
        }
        break;
    case 4:
        {
            this->CloseWindow_Button = safe_cast<::Windows::UI::Xaml::Controls::Button^>(__target);
            (safe_cast<::Windows::UI::Xaml::Controls::Button^>(this->CloseWindow_Button))->Tapped += ref new ::Windows::UI::Xaml::Input::TappedEventHandler(this, (void (::Just_Editor::DuronWindowItemxaml::*)
                (::Platform::Object^, ::Windows::UI::Xaml::Input::TappedRoutedEventArgs^))&DuronWindowItemxaml::CloseWindow_Button_Tapped);
        }
        break;
    }
    _contentLoaded = true;
}

::Windows::UI::Xaml::Markup::IComponentConnector^ ::Just_Editor::DuronWindowItemxaml::GetBindingConnector(int __connectionId, ::Platform::Object^ __target)
{
    ::XamlBindingInfo::XamlBindings^ bindings = nullptr;
    switch (__connectionId)
    {
        case 1: // DuronWindowItemxaml.xaml line 1
            {
                ::Windows::UI::Xaml::Controls::UserControl^ element1 = safe_cast<::Windows::UI::Xaml::Controls::UserControl^>(__target);
                DuronWindowItemxaml_obj1_Bindings* objBindings = new DuronWindowItemxaml_obj1_Bindings();
                objBindings->SetDataRoot(this);
                bindings = ref new ::XamlBindingInfo::XamlBindings(objBindings);
                this->Bindings = bindings;
                element1->Loading += ref new ::Windows::Foundation::TypedEventHandler<::Windows::UI::Xaml::FrameworkElement^, ::Platform::Object^>(bindings, &::XamlBindingInfo::XamlBindings::Loading);
            }
            break;
    }
    return bindings;
}

#pragma warning(pop)


